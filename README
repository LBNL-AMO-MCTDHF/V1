
  ** LBNL-AMO-MCTDHF VERSION 1 **

FIRST DISTRIBUTION VERSION.  MPI FFT for mean fields.

For the moment, please watch the commits to stay notified about bug fixes:
     https://github.com/LBNL-AMO-MCTDHF/V1.00/commits/master

Possible workflow described below for mac.
Example subdirectories now all renamed with -clean extensions.
So you may proceed as described for mac; when you perform a git pull, the -clean
   subdirectories will be updated, and you can carry the updates to any new
   subdirectories you have created within EXAMPLES.
You may also create new subdirectories within the .git working
   directory "V1.00" (which you may rename).
The idea is that you can work entirely within the directory that you clone and to
   which you pull, not copy the git distribution elsewhere for compilation, for
   instance, and this is described below for mac.  You may or may not wish to do 
   this.

 ----------------------------------------------------

Hybrid OpenMP / MPI code       Remember to use PROCESS/THREAD AFFINITY

Velocity gauge sinc DVR just implemented, not debugged nor checked for factors.

Improvedquadflag = 1, 2, and 3 now available again ... new method for 2 & 3

Read orbitals for x2 resolution using loadspfflag=1 for sinc dvr by setting
  reinterp_orbflag=1 in &parinp (not supported for atom or diatom)

MPI ORBITAL PARALLELIZATION for sinc dvr (chmctdhf_sinc) only with parorbsplit=3.
  set both parorbsplit=3 in &parinp and orbparflag=.true. in &sinc_params.
  When this is set:

  RATE LIMITING STEP IN CODE (chmctdhf_sinc) AT SCALE: 

     --> MPI PARALLEL KINETIC ENERGY MULTIPLICATION IN Z DIRECTION <--

  FOUR OPTIONS for &sincparinp namelist variable zke_paropt:

  zke_paropt=0   mult_circ_z      sendrecv
  zke_paropt=1   mult_summa_z     SUMMA  scalable universal matrix multiplication 
                                    algorithm (broadcast before)
  zke_paropt=2   mult_reduce_z    reduce after (slow, generally, right?)
  zke_paropt=3   mult_alltoall_z  Calculate everything, wasting memory, then 
                                    perform all to all (previous subroutine)

 ----------------------------------------------------

On Mac: minimal demonstration

FIRST:
     git clone https://github.com/LBNL-AMO-MCTDHF/V1.00 master
        ( or e.g.
     git clone https://github.com/LBNL-AMO-MCTDHF/V1.00 v1.02 )
     mv V1.00 V1.00.firsttry     ...if you want
     cd V1.00.firsttry
     mkdir MYRUNS         ...if you want, for instance
 
THEN perform each step in this V1.00.firsttry working directory

1)   mv COMPDIRS/*mac* .
     rm -r COMPDIRS/*
     mv *BIN*mac* COMPDIRS

2A)  cd COMPDIRS/BIN.ecs.hermorm.mac
               or
2B)  cd COMPDIRS/BIN.ecs.hermorm.mac.mpi
              then
     export PATH=.:$PWD:$PATH
               or
     export PATH=$PWD:$PATH
               or 
     export PATH=$PATH:$PWD
                          ...or however you do it.  Maybe in your .bashrc
              and
     ./Makeme
3)   cd EXAMPLES
              then
A)   cp -R -p METHANE.abs.0.40186.45pts-clean METHANE.abs.0.40186.45pts
     cd METHANE.abs.0.40186.45pts
     chmctdhf_sinc Inp=Input.Inp.Relax | tee Outs/Out.relax
     chmctdhf_sinc Inp=Input.Inp.Pulse | tee Outs/Out.pulse
               or
B)   cp -R -p METHANE.abs.0.40186.75pts-clean METHANE.abs.0.40186.75pts
     cd METHANE.abs.0.40186.75pts
     mpirun -n 15 chmctdhf_sinc Inp=Input.Inp.Relax | tee Outs/Out.relax
     mpirun -n 15 chmctdhf_sinc Inp=Input.Inp.Pulse | tee Outs/Out.pulse
              then
     ./gnu.abs.here

If you want to update the code and -clean examples subdirectories then perform 
step 4, like steps 1-3, in the V1.00 working directory,

4)   git pull https://github.com/LBNL-AMO-MCTDHF/V1.00 master
     ... then ./Makeme should be sufficient, in the BIN directories,
         but ./Makeme clean; ./Makeme would certainly be fail safe
         after updating the code with git pull.


-------------------    MODULES TO LOAD    --------------------
------------------- ON NERSC & LAWRENCIUM --------------------

  COMPDIRS/BIN.ecs.hermnorm.law, 
  COMPDIRS/BIN.ecs.hermnorm.edison, etc.

LAWRENCIUM:

module load mkl

CARVER:

module unload pgi openmpi
module load intel openmpi-intel mkl
module unload torque
module load torque

HOPPER:

module swap PrgEnv-pgi PrgEnv-intel
#yes last
module unload cray-libsci

EDISON:

module unload cray-libsci
module load mkl

  DJH 04-18-2015
